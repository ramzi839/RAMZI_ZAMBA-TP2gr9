// Generated by dia2code
#ifndef STATE__ELEMENTLIST__H
#define STATE__ELEMENTLIST__H

#include <vector>

namespace state {
  class State;
  class ElementFactory;
  class Element;
  class Observable;
}

#include "Observable.h"
#include "ElementFactory.h"
#include "Element.h"

namespace state {

  /// class ElementList - 
  class ElementList : public state::Observable {
    // Associations
    // Attributes
  public:
    State& state;
    ElementFactory* factory;
    std::vector<Element*> elements;
    // Operations
  public:
    ElementList (State& s);
    ~ElementList ();
    State&  getState ();
    int  getSize ();
    Element*  getElement (Element* e);
    void setElementFactory (ElementFactory* f);
    void setElement (int i, Element* e);
    void  notifyObserver (int i);
  };

};

#endif
